@startuml
title Вычисление многочлена по схеме Горнера
skinparam backgroundColor white
skinparam node {
    BackgroundColor white
    BorderColor black
    FontSize 12
}

node "Исходные данные" as start {
    node "a = [1, 2, 3, 4]\nx = 2\np начальное = 1" as input
}

node "sod(4, a, 1, 2)" as call1 {
    node "n = 4\na[3] = 4\np = 1\n4 * 1 = 4\nВозврат: 4 + след.шаг" as step1
}

node "sod(3, a, 2, 2)" as call2 {
    node "n = 3\na[2] = 3\np = 2\n3 * 2 = 6\nВозврат: 6 + след.шаг" as step2
}

node "sod(2, a, 4, 2)" as call3 {
    node "n = 2\na[1] = 2\np = 4\n2 * 4 = 8\nВозврат: 8 + след.шаг" as step3
}

node "sod(1, a, 8, 2)" as call4 {
    node "n = 1\na[0] = 1\np = 8\n1 * 8 = 8\nВозврат: 8 + след.шаг" as step4
}

node "sod(0, a, 16, 2)" as call5 {
    node "n = 0\nВозврат: 0" as step5
}

node "Итоговый результат = 26" as result #LightGreen

start -down-> call1
call1 -down-> call2
call2 -down-> call3
call3 -down-> call4
call4 -down-> call5
call5 -[#red]-> result

legend right
    Схема Горнера:
    Для многочлена ax³ + bx² + cx + d
    вычисляем: ((ax + b)x + c)x + d
    
    В нашем случае:
    4x³ + 3x² + 2x + 1
    при x = 2
end legend

@enduml
